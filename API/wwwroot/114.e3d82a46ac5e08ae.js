"use strict";(self.webpackChunkClient=self.webpackChunkClient||[]).push([[114],{3934:(te,M,g)=>{g.d(M,{K:()=>G});var _=g(7490),x=g(5516),w=g(4726),$=g(2096),F=g(7398),o=g(9468),Y=g(9862);let G=(()=>{var A;class j{constructor(p){this.http=p,this.baseUrl=x.N.apiUrl,this.userParams=new _.M({pageNumber:1,pageSize:15}),this.memberCache=new Map}resetUserParams(){return this.userParams=new _.M,this.userParams}getUserData(p){const y=Object.values(p).join("-"),P=this.memberCache.get(y);if(P)return(0,$.of)(P);let v=(0,w.r)(p.pageNumber,p.pageSize);return v=v.append("orderBy",p.orderBy),v=v.append("order",p.order),""!==p.searchTerm.trim()&&(v=v.append("searchTerm",p.searchTerm.trim())),""!==p.gender.trim()&&(v=v.append("gender",p.gender.trim())),null!==p.doctorSpecialityId&&(v=v.append("doctorSpecialityId",p.doctorSpecialityId)),""!==p.roleName.trim()&&(v=v.append("roleName",p.roleName.trim())),(0,w.T)(this.baseUrl+"user/all/",v,this.http).pipe((0,F.U)(R=>(this.memberCache.set(y,R),R)))}getUsers(p){return this.getUserData(p)}getUser(p){const y=[...this.memberCache.values()].reduce((P,v)=>P.concat(v.result),[]).find(P=>P.id==p);return y?(0,$.of)(y):this.http.get(this.baseUrl+"user/"+p)}setUserParams(p){this.userParams=p}updateUser(p){return this.http.put(this.baseUrl+"user/",p)}uploadImage(p){const y=new FormData;y.append("file",p.file),y.append("userId",p.userId.toString()),y.append("category",p.category);let P=new Date(p.imageDate);return y.append("imageDate",P.toISOString()),y.append("type",p.type),y.append("organ",p.organ),this.http.post(this.baseUrl+"user/uploadImage",y)}getUserImages(p){return this.http.get(this.baseUrl+"user/userImages/"+p)}invalidateUsersCache(){this.memberCache.clear()}}return(A=j).\u0275fac=function(p){return new(p||A)(o.LFG(Y.eN))},A.\u0275prov=o.Yz7({token:A,factory:A.\u0275fac,providedIn:"root"}),j})()},7114:(te,M,g)=>{g.r(M),g.d(M,{DashboardClinicsModule:()=>gt});var _=g(1311),x=g(6814),w=g(95),$=g(6319),F=g(7021),o=g(9468),Y=g(3348),G=g(7490),A=g(5516),j=g(5619),B=g(2096),p=g(7398),y=g(4726),P=g(9862),v=g(9229),V=g(4541);let R=(()=>{var r;class e{constructor(n,i,s){this.http=n,this.toastr=i,this.appoinmentService=s,this.baseUrl=A.N.apiUrl,this.clinicParams={pageNumber:1,pageSize:15},this.clinicCache=new Map,this.clinicWithAppointmentsCache=new Map,this.appointmentStatusUpdated=new j.X(null),this.appointmentStatusUpdated$=this.appointmentStatusUpdated.asObservable()}getClinics(n){var i=this.clinicCache.get(Object.values(n).join("-"));if(i)return(0,B.of)(i);let s=(0,y.r)(n.pageNumber,n.pageSize);return(0,y.T)(this.baseUrl+"clinic/",s,this.http).pipe((0,p.U)(a=>(this.clinicCache.set(Object.values(n).join("-"),a),a)))}getClinicsWithFirstTwoUpcomingAppointments(n){var i=this.clinicWithAppointmentsCache.get(Object.values(n).join("-"));if(i)return(0,B.of)(i);let s=(0,y.r)(n.pageNumber,n.pageSize);return(0,y.T)(this.baseUrl+"clinic/getClinicsWithFirstTwoUpcomingAppointments/",s,this.http).pipe((0,p.U)(a=>(this.clinicWithAppointmentsCache.set(Object.values(n).join("-"),a),a)))}createClinic(n){return this.http.post(this.baseUrl+"clinic",n).pipe((0,p.U)(i=>(this.invalidateClinicCache(),i)))}updateClinic(n){return this.http.put(this.baseUrl+"clinic",n).pipe((0,p.U)(i=>(this.invalidateClinicCache(),i)))}deleteClinic(n){return this.http.delete(this.baseUrl+"clinic/"+n).pipe((0,p.U)(i=>(this.invalidateClinicCache(),i)))}invalidateClinicCache(){this.clinicCache.clear(),this.clinicWithAppointmentsCache.clear()}updateDoctorBookedWithAppointmentsByDoctorId(n,i,s){this.appoinmentService.getFirstTwoUpcomingAppointmentsForDoctorById(n).subscribe(a=>{this.clinicWithAppointmentsCache.forEach((l,h)=>{l.result.forEach(d=>{d.clinicDoctors?.forEach(u=>{u.doctor?.id===n&&(u.doctor.bookedWithAppointments=a,this.appointmentStatusUpdated.next({appointmentId:i,status:s}))})})})})}}return(r=e).\u0275fac=function(n){return new(n||r)(o.LFG(P.eN),o.LFG(v._W),o.LFG(V.H))},r.\u0275prov=o.Yz7({token:r,factory:r.\u0275fac,providedIn:"root"}),e})();var ue=g(3934),ge=g(923),ne=g(4807);function _e(r,e){1&r&&o.GkF(0)}const fe=function(){return{standalone:!0}};function me(r,e){if(1&r){const t=o.EpF();o.TgZ(0,"form",8),o.NdJ("ngSubmit",function(){o.CHM(t);const i=o.oxw();return o.KtG(i.createUpdateClinicForm.valid)}),o.TgZ(1,"div",9)(2,"div",10)(3,"div",11)(4,"label",12),o._uU(5,"Clinic Number"),o.qZA(),o._UZ(6,"app-text-input",13),o.qZA()(),o.TgZ(7,"div",10)(8,"div",11)(9,"label",12),o._uU(10,"Doctors"),o.qZA(),o.TgZ(11,"ng-select",14),o.NdJ("search",function(i){o.CHM(t);const s=o.oxw();return o.KtG(s.searchDoctors(i))})("ngModelChange",function(i){o.CHM(t);const s=o.oxw();return o.KtG(s.selectedDoctor=i)})("change",function(i){o.CHM(t);const s=o.oxw();return o.KtG(s.onDoctorSelect(i))}),o.qZA()()()()()}if(2&r){const t=o.oxw();o.Q6J("formGroup",t.createUpdateClinicForm),o.xp6(6),o.Q6J("label","Clinic Number"),o.xp6(5),o.Q6J("items",t.doctorList)("virtualScroll",!0)("compareWith",t.compareFn)("bindLabel","fullName")("bindValue","id")("multiple",!0)("ngModel",t.selectedDoctor)("ngModelOptions",o.DdM(10,fe))}}let oe=(()=>{var r;class e{constructor(n,i,s){this.fb=n,this.clinicService=i,this.userService=s,this.visible=!1,this.specialityList=[],this.visibleChange=new o.vpe,this.clinicAddedUpdated=new o.vpe,this.roleDoctor=Y.K.DOCTOR,this.doctorParams=new G.M({pageNumber:1,pageSize:5,roleName:this.roleDoctor}),this.doctorList=[]}ngOnInit(){this.intializeForm()}intializeForm(){this.createUpdateClinicForm=this.fb.group({id:[0,w.kI.required],clinicNumber:["",w.kI.required],clinicDoctors:this.fb.array([])})}modelToggeled(n){this.visible=n,this.visibleChange.emit(this.visible)}compareFn(n,i){return n&&i?n.id===i.id:n===i}searchDoctors(n){n.term.trim().length>2&&(this.doctorParams.searchTerm=n.term,this.userService.getUserData(this.doctorParams).subscribe(i=>{this.doctorList=i.result}))}createUpdateClinic(){0==this.createUpdateClinicForm.get("id")?.value?this.createClinic():this.updateClinic()}createClinic(){this.clinicService.createClinic(this.createUpdateClinicForm.value).subscribe(n=>{this.clinicAddedUpdated.emit(n),this.modelToggeled(!1)})}updateClinic(){this.clinicService.updateClinic(this.createUpdateClinicForm.value).subscribe(n=>{this.clinicAddedUpdated.emit(n),this.modelToggeled(!1)})}onDoctorSelect(n){this.updateClinicDoctor(n)}updateClinicDoctor(n){const i=this.createUpdateClinicForm.get("clinicDoctors");i.clear(),n.forEach(s=>{i.push(this.fb.group({clinicId:[this.createUpdateClinicForm.get("id")?.value],doctorId:[s.id]}))})}}return(r=e).\u0275fac=function(n){return new(n||r)(o.Y36(w.qu),o.Y36(R),o.Y36(ue.K))},r.\u0275cmp=o.Xpm({type:r,selectors:[["app-clinics-modal"]],inputs:{visible:"visible",specialityList:"specialityList"},outputs:{visibleChange:"visibleChange",clinicAddedUpdated:"clinicAddedUpdated"},decls:15,vars:5,consts:[["id","clinicModal","size","xl","scrollable","",3,"visible","visibleChange"],["clinicModal",""],["cModalTitle",""],["cButtonClose","",3,"cModalToggle"],[4,"ngTemplateOutlet"],["cButton","","color","secondary",3,"cModalToggle"],["cButton","","color","primary",3,"disabled","click"],["clinicContent",""],["cForm","","autocomplete","off",3,"formGroup","ngSubmit"],[1,"row"],[1,"col"],[1,"mb-3"],["cLabel",""],["icon","cilUser","formControlName","clinicNumber",3,"label"],[3,"items","virtualScroll","compareWith","bindLabel","bindValue","multiple","ngModel","ngModelOptions","search","ngModelChange","change"]],template:function(n,i){if(1&n&&(o.TgZ(0,"c-modal",0,1),o.NdJ("visibleChange",function(a){return i.modelToggeled(a)}),o.TgZ(2,"c-modal-header")(3,"h5",2),o._uU(4,"Clinic"),o.qZA(),o._UZ(5,"button",3),o.qZA(),o.TgZ(6,"c-modal-body"),o.YNc(7,_e,1,0,"ng-container",4),o.qZA(),o.TgZ(8,"c-modal-footer")(9,"button",5),o._uU(10," Close "),o.qZA(),o.TgZ(11,"button",6),o.NdJ("click",function(){return i.createUpdateClinic()}),o._uU(12,"Save changes"),o.qZA()()(),o.YNc(13,me,12,11,"ng-template",null,7,o.W1O)),2&n){const s=o.MAs(1),a=o.MAs(14);o.Q6J("visible",i.visible),o.xp6(5),o.Q6J("cModalToggle",s.id),o.xp6(2),o.Q6J("ngTemplateOutlet",a),o.xp6(2),o.Q6J("cModalToggle",s.id),o.xp6(2),o.Q6J("disabled",!i.createUpdateClinicForm.valid)}},dependencies:[x.tP,w._Y,w.JJ,w.JL,w.On,ge.t,_.Hq3,_.PFQ,_.$_X,_.eFW,w.sg,w.u,_.KF4,_.zS7,_.YI7,_.Rbl,_.vPP,_.Ntb,ne.w9]}),e})();var Ce=g(1272),ie=g(6084);const be=[0,2e3,1e4,3e4,null];class re{constructor(e){this._retryDelays=void 0!==e?[...e,null]:be}nextRetryDelayInMilliseconds(e){return this._retryDelays[e.previousRetryCount]}}var C=g(5861);let Z=(()=>{class r{}return r.Authorization="Authorization",r.Cookie="Cookie",r})();class se{constructor(e,t,n){this.statusCode=e,this.statusText=t,this.content=n}}class J{get(e,t){return this.send({...t,method:"GET",url:e})}post(e,t){return this.send({...t,method:"POST",url:e})}delete(e,t){return this.send({...t,method:"DELETE",url:e})}getCookieString(e){return""}}class ve extends J{constructor(e,t){super(),this._innerClient=e,this._accessTokenFactory=t}send(e){var t=this;return(0,C.Z)(function*(){let n=!0;t._accessTokenFactory&&(!t._accessToken||e.url&&e.url.indexOf("/negotiate?")>0)&&(n=!1,t._accessToken=yield t._accessTokenFactory()),t._setAuthorizationHeader(e);const i=yield t._innerClient.send(e);return n&&401===i.statusCode&&t._accessTokenFactory?(t._accessToken=yield t._accessTokenFactory(),t._setAuthorizationHeader(e),yield t._innerClient.send(e)):i})()}_setAuthorizationHeader(e){e.headers||(e.headers={}),this._accessToken?e.headers[Z.Authorization]=`Bearer ${this._accessToken}`:this._accessTokenFactory&&e.headers[Z.Authorization]&&delete e.headers[Z.Authorization]}getCookieString(e){return this._innerClient.getCookieString(e)}}class N extends Error{constructor(e,t){const n=new.target.prototype;super(`${e}: Status code '${t}'`),this.statusCode=t,this.__proto__=n}}class X extends Error{constructor(e="A timeout occurred."){const t=new.target.prototype;super(e),this.__proto__=t}}class D extends Error{constructor(e="An abort occurred."){const t=new.target.prototype;super(e),this.__proto__=t}}class we extends Error{constructor(e,t){const n=new.target.prototype;super(e),this.transport=t,this.errorType="UnsupportedTransportError",this.__proto__=n}}class ye extends Error{constructor(e,t){const n=new.target.prototype;super(e),this.transport=t,this.errorType="DisabledTransportError",this.__proto__=n}}class Se extends Error{constructor(e,t){const n=new.target.prototype;super(e),this.transport=t,this.errorType="FailedToStartTransportError",this.__proto__=n}}class Te extends Error{constructor(e){const t=new.target.prototype;super(e),this.errorType="FailedToNegotiateWithServerError",this.__proto__=t}}class Ie extends Error{constructor(e,t){const n=new.target.prototype;super(e),this.innerErrors=t,this.__proto__=n}}var ce,c=function(r){return r[r.Trace=0]="Trace",r[r.Debug=1]="Debug",r[r.Information=2]="Information",r[r.Warning=3]="Warning",r[r.Error=4]="Error",r[r.Critical=5]="Critical",r[r.None=6]="None",r}(c||{});class W{constructor(){}log(e,t){}}W.instance=new W;const Ee="7.0.11";class S{static isRequired(e,t){if(null==e)throw new Error(`The '${t}' argument is required.`)}static isNotEmpty(e,t){if(!e||e.match(/^\s*$/))throw new Error(`The '${t}' argument should not be empty.`)}static isIn(e,t,n){if(!(e in t))throw new Error(`Unknown ${n} value: ${e}.`)}}class T{static get isBrowser(){return"object"==typeof window&&"object"==typeof window.document}static get isWebWorker(){return"object"==typeof self&&"importScripts"in self}static get isReactNative(){return"object"==typeof window&&typeof window.document>"u"}static get isNode(){return!this.isBrowser&&!this.isWebWorker&&!this.isReactNative}}function H(r,e){let t="";return L(r)?(t=`Binary data of length ${r.byteLength}`,e&&(t+=`. Content: '${function ke(r){const e=new Uint8Array(r);let t="";return e.forEach(n=>{t+=`0x${n<16?"0":""}${n.toString(16)} `}),t.substr(0,t.length-1)}(r)}'`)):"string"==typeof r&&(t=`String data of length ${r.length}`,e&&(t+=`. Content: '${r}'`)),t}function L(r){return r&&typeof ArrayBuffer<"u"&&(r instanceof ArrayBuffer||r.constructor&&"ArrayBuffer"===r.constructor.name)}function ae(r,e,t,n,i,s){return(ce=ce||(0,C.Z)(function*(a,l,h,d,u,f){const U={},[Q,_t]=O();U[Q]=_t,a.log(c.Trace,`(${l} transport) sending data. ${H(u,f.logMessageContent)}.`);const ft=L(u)?"arraybuffer":"text",mt=yield h.post(d,{content:u,headers:{...U,...f.headers},responseType:ft,timeout:f.timeout,withCredentials:f.withCredentials});a.log(c.Trace,`(${l} transport) request complete. Response status: ${mt.statusCode}.`)})).apply(this,arguments)}class De{constructor(e,t){this._subject=e,this._observer=t}dispose(){const e=this._subject.observers.indexOf(this._observer);e>-1&&this._subject.observers.splice(e,1),0===this._subject.observers.length&&this._subject.cancelCallback&&this._subject.cancelCallback().catch(t=>{})}}class z{constructor(e){this._minLevel=e,this.out=console}log(e,t){if(e>=this._minLevel){const n=`[${(new Date).toISOString()}] ${c[e]}: ${t}`;switch(e){case c.Critical:case c.Error:this.out.error(n);break;case c.Warning:this.out.warn(n);break;case c.Information:this.out.info(n);break;default:this.out.log(n)}}}}function O(){let r="X-SignalR-User-Agent";return T.isNode&&(r="User-Agent"),[r,Pe(Ee,Ae(),T.isNode?"NodeJS":"Browser",Ue())]}function Pe(r,e,t,n){let i="Microsoft SignalR/";const s=r.split(".");return i+=`${s[0]}.${s[1]}`,i+=` (${r}; `,i+=e&&""!==e?`${e}; `:"Unknown OS; ",i+=`${t}`,i+=n?`; ${n}`:"; Unknown Runtime Version",i+=")",i}function Ae(){if(!T.isNode)return"";switch(process.platform){case"win32":return"Windows NT";case"darwin":return"macOS";case"linux":return"Linux";default:return process.platform}}function Ue(){if(T.isNode)return process.versions.node}function le(r){return r.stack?r.stack:r.message?r.message:`${r}`}class Re extends J{constructor(e){if(super(),this._logger=e,typeof fetch>"u"){const t=require;this._jar=new(t("tough-cookie").CookieJar),this._fetchType=t("node-fetch"),this._fetchType=t("fetch-cookie")(this._fetchType,this._jar)}else this._fetchType=fetch.bind(function $e(){if(typeof globalThis<"u")return globalThis;if(typeof self<"u")return self;if(typeof window<"u")return window;if(typeof global<"u")return global;throw new Error("could not find global")}());if(typeof AbortController>"u"){const t=require;this._abortControllerType=t("abort-controller")}else this._abortControllerType=AbortController}send(e){var t=this;return(0,C.Z)(function*(){if(e.abortSignal&&e.abortSignal.aborted)throw new D;if(!e.method)throw new Error("No method defined.");if(!e.url)throw new Error("No url defined.");const n=new t._abortControllerType;let i;e.abortSignal&&(e.abortSignal.onabort=()=>{n.abort(),i=new D});let a,s=null;e.timeout&&(s=setTimeout(()=>{n.abort(),t._logger.log(c.Warning,"Timeout from HTTP request."),i=new X},e.timeout)),""===e.content&&(e.content=void 0),e.content&&(e.headers=e.headers||{},e.headers["Content-Type"]=L(e.content)?"application/octet-stream":"text/plain;charset=UTF-8");try{a=yield t._fetchType(e.url,{body:e.content,cache:"no-cache",credentials:!0===e.withCredentials?"include":"same-origin",headers:{"X-Requested-With":"XMLHttpRequest",...e.headers},method:e.method,mode:"cors",redirect:"follow",signal:n.signal})}catch(d){throw i||(t._logger.log(c.Warning,`Error from HTTP request. ${d}.`),d)}finally{s&&clearTimeout(s),e.abortSignal&&(e.abortSignal.onabort=null)}if(!a.ok){const d=yield he(a,"text");throw new N(d||a.statusText,a.status)}const h=yield he(a,e.responseType);return new se(a.status,a.statusText,h)})()}getCookieString(e){let t="";return T.isNode&&this._jar&&this._jar.getCookies(e,(n,i)=>t=i.join("; ")),t}}function he(r,e){let t;switch(e){case"arraybuffer":t=r.arrayBuffer();break;case"text":default:t=r.text();break;case"blob":case"document":case"json":throw new Error(`${e} is not supported.`)}return t}class Ne extends J{constructor(e){super(),this._logger=e}send(e){return e.abortSignal&&e.abortSignal.aborted?Promise.reject(new D):e.method?e.url?new Promise((t,n)=>{const i=new XMLHttpRequest;i.open(e.method,e.url,!0),i.withCredentials=void 0===e.withCredentials||e.withCredentials,i.setRequestHeader("X-Requested-With","XMLHttpRequest"),""===e.content&&(e.content=void 0),e.content&&(L(e.content)?i.setRequestHeader("Content-Type","application/octet-stream"):i.setRequestHeader("Content-Type","text/plain;charset=UTF-8"));const s=e.headers;s&&Object.keys(s).forEach(a=>{i.setRequestHeader(a,s[a])}),e.responseType&&(i.responseType=e.responseType),e.abortSignal&&(e.abortSignal.onabort=()=>{i.abort(),n(new D)}),e.timeout&&(i.timeout=e.timeout),i.onload=()=>{e.abortSignal&&(e.abortSignal.onabort=null),i.status>=200&&i.status<300?t(new se(i.status,i.statusText,i.response||i.responseText)):n(new N(i.response||i.responseText||i.statusText,i.status))},i.onerror=()=>{this._logger.log(c.Warning,`Error from HTTP request. ${i.status}: ${i.statusText}.`),n(new N(i.statusText,i.status))},i.ontimeout=()=>{this._logger.log(c.Warning,"Timeout from HTTP request."),n(new X)},i.send(e.content)}):Promise.reject(new Error("No url defined.")):Promise.reject(new Error("No method defined."))}}class Oe extends J{constructor(e){if(super(),typeof fetch<"u"||T.isNode)this._httpClient=new Re(e);else{if(!(typeof XMLHttpRequest<"u"))throw new Error("No usable HttpClient found.");this._httpClient=new Ne(e)}}send(e){return e.abortSignal&&e.abortSignal.aborted?Promise.reject(new D):e.method?e.url?this._httpClient.send(e):Promise.reject(new Error("No url defined.")):Promise.reject(new Error("No method defined."))}getCookieString(e){return this._httpClient.getCookieString(e)}}var I=function(r){return r[r.None=0]="None",r[r.WebSockets=1]="WebSockets",r[r.ServerSentEvents=2]="ServerSentEvents",r[r.LongPolling=4]="LongPolling",r}(I||{}),E=function(r){return r[r.Text=1]="Text",r[r.Binary=2]="Binary",r}(E||{});class Ze{constructor(){this._isAborted=!1,this.onabort=null}abort(){this._isAborted||(this._isAborted=!0,this.onabort&&this.onabort())}get signal(){return this}get aborted(){return this._isAborted}}class de{constructor(e,t,n){this._httpClient=e,this._logger=t,this._pollAbort=new Ze,this._options=n,this._running=!1,this.onreceive=null,this.onclose=null}get pollAborted(){return this._pollAbort.aborted}connect(e,t){var n=this;return(0,C.Z)(function*(){if(S.isRequired(e,"url"),S.isRequired(t,"transferFormat"),S.isIn(t,E,"transferFormat"),n._url=e,n._logger.log(c.Trace,"(LongPolling transport) Connecting."),t===E.Binary&&typeof XMLHttpRequest<"u"&&"string"!=typeof(new XMLHttpRequest).responseType)throw new Error("Binary protocols over XmlHttpRequest not implementing advanced features are not supported.");const[i,s]=O(),a={[i]:s,...n._options.headers},l={abortSignal:n._pollAbort.signal,headers:a,timeout:1e5,withCredentials:n._options.withCredentials};t===E.Binary&&(l.responseType="arraybuffer");const h=`${e}&_=${Date.now()}`;n._logger.log(c.Trace,`(LongPolling transport) polling: ${h}.`);const d=yield n._httpClient.get(h,l);200!==d.statusCode?(n._logger.log(c.Error,`(LongPolling transport) Unexpected response code: ${d.statusCode}.`),n._closeError=new N(d.statusText||"",d.statusCode),n._running=!1):n._running=!0,n._receiving=n._poll(n._url,l)})()}_poll(e,t){var n=this;return(0,C.Z)(function*(){try{for(;n._running;)try{const i=`${e}&_=${Date.now()}`;n._logger.log(c.Trace,`(LongPolling transport) polling: ${i}.`);const s=yield n._httpClient.get(i,t);204===s.statusCode?(n._logger.log(c.Information,"(LongPolling transport) Poll terminated by server."),n._running=!1):200!==s.statusCode?(n._logger.log(c.Error,`(LongPolling transport) Unexpected response code: ${s.statusCode}.`),n._closeError=new N(s.statusText||"",s.statusCode),n._running=!1):s.content?(n._logger.log(c.Trace,`(LongPolling transport) data received. ${H(s.content,n._options.logMessageContent)}.`),n.onreceive&&n.onreceive(s.content)):n._logger.log(c.Trace,"(LongPolling transport) Poll timed out, reissuing.")}catch(i){n._running?i instanceof X?n._logger.log(c.Trace,"(LongPolling transport) Poll timed out, reissuing."):(n._closeError=i,n._running=!1):n._logger.log(c.Trace,`(LongPolling transport) Poll errored after shutdown: ${i.message}`)}}finally{n._logger.log(c.Trace,"(LongPolling transport) Polling complete."),n.pollAborted||n._raiseOnClose()}})()}send(e){var t=this;return(0,C.Z)(function*(){return t._running?ae(t._logger,"LongPolling",t._httpClient,t._url,e,t._options):Promise.reject(new Error("Cannot send until the transport is connected"))})()}stop(){var e=this;return(0,C.Z)(function*(){e._logger.log(c.Trace,"(LongPolling transport) Stopping polling."),e._running=!1,e._pollAbort.abort();try{yield e._receiving,e._logger.log(c.Trace,`(LongPolling transport) sending DELETE request to ${e._url}.`);const t={},[n,i]=O();t[n]=i;const s={headers:{...t,...e._options.headers},timeout:e._options.timeout,withCredentials:e._options.withCredentials};yield e._httpClient.delete(e._url,s),e._logger.log(c.Trace,"(LongPolling transport) DELETE request sent.")}finally{e._logger.log(c.Trace,"(LongPolling transport) Stop finished."),e._raiseOnClose()}})()}_raiseOnClose(){if(this.onclose){let e="(LongPolling transport) Firing onclose event.";this._closeError&&(e+=" Error: "+this._closeError),this._logger.log(c.Trace,e),this.onclose(this._closeError)}}}class We{constructor(e,t,n,i){this._httpClient=e,this._accessToken=t,this._logger=n,this._options=i,this.onreceive=null,this.onclose=null}connect(e,t){var n=this;return(0,C.Z)(function*(){return S.isRequired(e,"url"),S.isRequired(t,"transferFormat"),S.isIn(t,E,"transferFormat"),n._logger.log(c.Trace,"(SSE transport) Connecting."),n._url=e,n._accessToken&&(e+=(e.indexOf("?")<0?"?":"&")+`access_token=${encodeURIComponent(n._accessToken)}`),new Promise((i,s)=>{let l,a=!1;if(t===E.Text){if(T.isBrowser||T.isWebWorker)l=new n._options.EventSource(e,{withCredentials:n._options.withCredentials});else{const h=n._httpClient.getCookieString(e),d={};d.Cookie=h;const[u,f]=O();d[u]=f,l=new n._options.EventSource(e,{withCredentials:n._options.withCredentials,headers:{...d,...n._options.headers}})}try{l.onmessage=h=>{if(n.onreceive)try{n._logger.log(c.Trace,`(SSE transport) data received. ${H(h.data,n._options.logMessageContent)}.`),n.onreceive(h.data)}catch(d){return void n._close(d)}},l.onerror=h=>{a?n._close():s(new Error("EventSource failed to connect. The connection could not be found on the server, either the connection ID is not present on the server, or a proxy is refusing/buffering the connection. If you have multiple servers check that sticky sessions are enabled."))},l.onopen=()=>{n._logger.log(c.Information,`SSE connected to ${n._url}`),n._eventSource=l,a=!0,i()}}catch(h){return void s(h)}}else s(new Error("The Server-Sent Events transport only supports the 'Text' transfer format"))})})()}send(e){var t=this;return(0,C.Z)(function*(){return t._eventSource?ae(t._logger,"SSE",t._httpClient,t._url,e,t._options):Promise.reject(new Error("Cannot send until the transport is connected"))})()}stop(){return this._close(),Promise.resolve()}_close(e){this._eventSource&&(this._eventSource.close(),this._eventSource=void 0,this.onclose&&this.onclose(e))}}class He{constructor(e,t,n,i,s,a){this._logger=n,this._accessTokenFactory=t,this._logMessageContent=i,this._webSocketConstructor=s,this._httpClient=e,this.onreceive=null,this.onclose=null,this._headers=a}connect(e,t){var n=this;return(0,C.Z)(function*(){let i;return S.isRequired(e,"url"),S.isRequired(t,"transferFormat"),S.isIn(t,E,"transferFormat"),n._logger.log(c.Trace,"(WebSockets transport) Connecting."),n._accessTokenFactory&&(i=yield n._accessTokenFactory()),new Promise((s,a)=>{let l;e=e.replace(/^http/,"ws");const h=n._httpClient.getCookieString(e);let d=!1;if(T.isNode||T.isReactNative){const u={},[f,U]=O();u[f]=U,i&&(u[Z.Authorization]=`Bearer ${i}`),h&&(u[Z.Cookie]=h),l=new n._webSocketConstructor(e,void 0,{headers:{...u,...n._headers}})}else i&&(e+=(e.indexOf("?")<0?"?":"&")+`access_token=${encodeURIComponent(i)}`);l||(l=new n._webSocketConstructor(e)),t===E.Binary&&(l.binaryType="arraybuffer"),l.onopen=u=>{n._logger.log(c.Information,`WebSocket connected to ${e}.`),n._webSocket=l,d=!0,s()},l.onerror=u=>{let f=null;f=typeof ErrorEvent<"u"&&u instanceof ErrorEvent?u.error:"There was an error with the transport",n._logger.log(c.Information,`(WebSockets transport) ${f}.`)},l.onmessage=u=>{if(n._logger.log(c.Trace,`(WebSockets transport) data received. ${H(u.data,n._logMessageContent)}.`),n.onreceive)try{n.onreceive(u.data)}catch(f){return void n._close(f)}},l.onclose=u=>{if(d)n._close(u);else{let f=null;f=typeof ErrorEvent<"u"&&u instanceof ErrorEvent?u.error:"WebSocket failed to connect. The connection could not be found on the server, either the endpoint may not be a SignalR endpoint, the connection ID is not present on the server, or there is a proxy blocking WebSockets. If you have multiple servers check that sticky sessions are enabled.",a(new Error(f))}}})})()}send(e){return this._webSocket&&this._webSocket.readyState===this._webSocketConstructor.OPEN?(this._logger.log(c.Trace,`(WebSockets transport) sending data. ${H(e,this._logMessageContent)}.`),this._webSocket.send(e),Promise.resolve()):Promise.reject("WebSocket is not in the OPEN state")}stop(){return this._webSocket&&this._close(void 0),Promise.resolve()}_close(e){this._webSocket&&(this._webSocket.onclose=()=>{},this._webSocket.onmessage=()=>{},this._webSocket.onerror=()=>{},this._webSocket.close(),this._webSocket=void 0),this._logger.log(c.Trace,"(WebSockets transport) socket closed."),this.onclose&&(!this._isCloseEvent(e)||!1!==e.wasClean&&1e3===e.code?e instanceof Error?this.onclose(e):this.onclose():this.onclose(new Error(`WebSocket closed with status code: ${e.code} (${e.reason||"no reason given"}).`)))}_isCloseEvent(e){return e&&"boolean"==typeof e.wasClean&&"number"==typeof e.code}}class Le{constructor(e,t={}){if(this._stopPromiseResolver=()=>{},this.features={},this._negotiateVersion=1,S.isRequired(e,"url"),this._logger=function xe(r){return void 0===r?new z(c.Information):null===r?W.instance:void 0!==r.log?r:new z(r)}(t.logger),this.baseUrl=this._resolveUrl(e),(t=t||{}).logMessageContent=void 0!==t.logMessageContent&&t.logMessageContent,"boolean"!=typeof t.withCredentials&&void 0!==t.withCredentials)throw new Error("withCredentials option was not a 'boolean' or 'undefined' value");t.withCredentials=void 0===t.withCredentials||t.withCredentials,t.timeout=void 0===t.timeout?1e5:t.timeout;let n=null,i=null;if(T.isNode){const s=require;n=s("ws"),i=s("eventsource")}!T.isNode&&typeof WebSocket<"u"&&!t.WebSocket?t.WebSocket=WebSocket:T.isNode&&!t.WebSocket&&n&&(t.WebSocket=n),!T.isNode&&typeof EventSource<"u"&&!t.EventSource?t.EventSource=EventSource:T.isNode&&!t.EventSource&&typeof i<"u"&&(t.EventSource=i),this._httpClient=new ve(t.httpClient||new Oe(this._logger),t.accessTokenFactory),this._connectionState="Disconnected",this._connectionStarted=!1,this._options=t,this.onreceive=null,this.onclose=null}start(e){var t=this;return(0,C.Z)(function*(){if(S.isIn(e=e||E.Binary,E,"transferFormat"),t._logger.log(c.Debug,`Starting connection with transfer format '${E[e]}'.`),"Disconnected"!==t._connectionState)return Promise.reject(new Error("Cannot start an HttpConnection that is not in the 'Disconnected' state."));if(t._connectionState="Connecting",t._startInternalPromise=t._startInternal(e),yield t._startInternalPromise,"Disconnecting"===t._connectionState){const n="Failed to start the HttpConnection before stop() was called.";return t._logger.log(c.Error,n),yield t._stopPromise,Promise.reject(new D(n))}if("Connected"!==t._connectionState){const n="HttpConnection.startInternal completed gracefully but didn't enter the connection into the connected state!";return t._logger.log(c.Error,n),Promise.reject(new D(n))}t._connectionStarted=!0})()}send(e){return"Connected"!==this._connectionState?Promise.reject(new Error("Cannot send data if the connection is not in the 'Connected' State.")):(this._sendQueue||(this._sendQueue=new q(this.transport)),this._sendQueue.send(e))}stop(e){var t=this;return(0,C.Z)(function*(){return"Disconnected"===t._connectionState?(t._logger.log(c.Debug,`Call to HttpConnection.stop(${e}) ignored because the connection is already in the disconnected state.`),Promise.resolve()):"Disconnecting"===t._connectionState?(t._logger.log(c.Debug,`Call to HttpConnection.stop(${e}) ignored because the connection is already in the disconnecting state.`),t._stopPromise):(t._connectionState="Disconnecting",t._stopPromise=new Promise(n=>{t._stopPromiseResolver=n}),yield t._stopInternal(e),void(yield t._stopPromise))})()}_stopInternal(e){var t=this;return(0,C.Z)(function*(){t._stopError=e;try{yield t._startInternalPromise}catch{}if(t.transport){try{yield t.transport.stop()}catch(n){t._logger.log(c.Error,`HttpConnection.transport.stop() threw error '${n}'.`),t._stopConnection()}t.transport=void 0}else t._logger.log(c.Debug,"HttpConnection.transport is undefined in HttpConnection.stop() because start() failed.")})()}_startInternal(e){var t=this;return(0,C.Z)(function*(){let n=t.baseUrl;t._accessTokenFactory=t._options.accessTokenFactory,t._httpClient._accessTokenFactory=t._accessTokenFactory;try{if(t._options.skipNegotiation){if(t._options.transport!==I.WebSockets)throw new Error("Negotiation can only be skipped when using the WebSocket transport directly.");t.transport=t._constructTransport(I.WebSockets),yield t._startTransport(n,e)}else{let i=null,s=0;do{if(i=yield t._getNegotiationResponse(n),"Disconnecting"===t._connectionState||"Disconnected"===t._connectionState)throw new D("The connection was stopped during negotiation.");if(i.error)throw new Error(i.error);if(i.ProtocolVersion)throw new Error("Detected a connection attempt to an ASP.NET SignalR Server. This client only supports connecting to an ASP.NET Core SignalR Server. See https://aka.ms/signalr-core-differences for details.");if(i.url&&(n=i.url),i.accessToken){const a=i.accessToken;t._accessTokenFactory=()=>a,t._httpClient._accessToken=a,t._httpClient._accessTokenFactory=void 0}s++}while(i.url&&s<100);if(100===s&&i.url)throw new Error("Negotiate redirection limit exceeded.");yield t._createTransport(n,t._options.transport,i,e)}t.transport instanceof de&&(t.features.inherentKeepAlive=!0),"Connecting"===t._connectionState&&(t._logger.log(c.Debug,"The HttpConnection connected successfully."),t._connectionState="Connected")}catch(i){return t._logger.log(c.Error,"Failed to start the connection: "+i),t._connectionState="Disconnected",t.transport=void 0,t._stopPromiseResolver(),Promise.reject(i)}})()}_getNegotiationResponse(e){var t=this;return(0,C.Z)(function*(){const n={},[i,s]=O();n[i]=s;const a=t._resolveNegotiateUrl(e);t._logger.log(c.Debug,`Sending negotiation request: ${a}.`);try{const l=yield t._httpClient.post(a,{content:"",headers:{...n,...t._options.headers},timeout:t._options.timeout,withCredentials:t._options.withCredentials});if(200!==l.statusCode)return Promise.reject(new Error(`Unexpected status code returned from negotiate '${l.statusCode}'`));const h=JSON.parse(l.content);return(!h.negotiateVersion||h.negotiateVersion<1)&&(h.connectionToken=h.connectionId),h}catch(l){let h="Failed to complete negotiation with the server: "+l;return l instanceof N&&404===l.statusCode&&(h+=" Either this is not a SignalR endpoint or there is a proxy blocking the connection."),t._logger.log(c.Error,h),Promise.reject(new Te(h))}})()}_createConnectUrl(e,t){return t?e+(-1===e.indexOf("?")?"?":"&")+`id=${t}`:e}_createTransport(e,t,n,i){var s=this;return(0,C.Z)(function*(){let a=s._createConnectUrl(e,n.connectionToken);if(s._isITransport(t))return s._logger.log(c.Debug,"Connection was provided an instance of ITransport, using that directly."),s.transport=t,yield s._startTransport(a,i),void(s.connectionId=n.connectionId);const l=[],h=n.availableTransports||[];let d=n;for(const u of h){const f=s._resolveTransportOrError(u,t,i);if(f instanceof Error)l.push(`${u.transport} failed:`),l.push(f);else if(s._isITransport(f)){if(s.transport=f,!d){try{d=yield s._getNegotiationResponse(e)}catch(U){return Promise.reject(U)}a=s._createConnectUrl(e,d.connectionToken)}try{return yield s._startTransport(a,i),void(s.connectionId=d.connectionId)}catch(U){if(s._logger.log(c.Error,`Failed to start the transport '${u.transport}': ${U}`),d=void 0,l.push(new Se(`${u.transport} failed: ${U}`,I[u.transport])),"Connecting"!==s._connectionState){const Q="Failed to select transport before stop() was called.";return s._logger.log(c.Debug,Q),Promise.reject(new D(Q))}}}}return Promise.reject(l.length>0?new Ie(`Unable to connect to the server with any of the available transports. ${l.join(" ")}`,l):new Error("None of the transports supported by the client are supported by the server."))})()}_constructTransport(e){switch(e){case I.WebSockets:if(!this._options.WebSocket)throw new Error("'WebSocket' is not supported in your environment.");return new He(this._httpClient,this._accessTokenFactory,this._logger,this._options.logMessageContent,this._options.WebSocket,this._options.headers||{});case I.ServerSentEvents:if(!this._options.EventSource)throw new Error("'EventSource' is not supported in your environment.");return new We(this._httpClient,this._httpClient._accessToken,this._logger,this._options);case I.LongPolling:return new de(this._httpClient,this._logger,this._options);default:throw new Error(`Unknown transport: ${e}.`)}}_startTransport(e,t){return this.transport.onreceive=this.onreceive,this.transport.onclose=n=>this._stopConnection(n),this.transport.connect(e,t)}_resolveTransportOrError(e,t,n){const i=I[e.transport];if(null==i)return this._logger.log(c.Debug,`Skipping transport '${e.transport}' because it is not supported by this client.`),new Error(`Skipping transport '${e.transport}' because it is not supported by this client.`);if(!function Fe(r,e){return!r||0!=(e&r)}(t,i))return this._logger.log(c.Debug,`Skipping transport '${I[i]}' because it was disabled by the client.`),new ye(`'${I[i]}' is disabled by the client.`,i);if(!(e.transferFormats.map(a=>E[a]).indexOf(n)>=0))return this._logger.log(c.Debug,`Skipping transport '${I[i]}' because it does not support the requested transfer format '${E[n]}'.`),new Error(`'${I[i]}' does not support ${E[n]}.`);if(i===I.WebSockets&&!this._options.WebSocket||i===I.ServerSentEvents&&!this._options.EventSource)return this._logger.log(c.Debug,`Skipping transport '${I[i]}' because it is not supported in your environment.'`),new we(`'${I[i]}' is not supported in your environment.`,i);this._logger.log(c.Debug,`Selecting transport '${I[i]}'.`);try{return this._constructTransport(i)}catch(a){return a}}_isITransport(e){return e&&"object"==typeof e&&"connect"in e}_stopConnection(e){if(this._logger.log(c.Debug,`HttpConnection.stopConnection(${e}) called while in state ${this._connectionState}.`),this.transport=void 0,e=this._stopError||e,this._stopError=void 0,"Disconnected"!==this._connectionState){if("Connecting"===this._connectionState)throw this._logger.log(c.Warning,`Call to HttpConnection.stopConnection(${e}) was ignored because the connection is still in the connecting state.`),new Error(`HttpConnection.stopConnection(${e}) was called while the connection is still in the connecting state.`);if("Disconnecting"===this._connectionState&&this._stopPromiseResolver(),e?this._logger.log(c.Error,`Connection disconnected with error '${e}'.`):this._logger.log(c.Information,"Connection disconnected."),this._sendQueue&&(this._sendQueue.stop().catch(t=>{this._logger.log(c.Error,`TransportSendQueue.stop() threw error '${t}'.`)}),this._sendQueue=void 0),this.connectionId=void 0,this._connectionState="Disconnected",this._connectionStarted){this._connectionStarted=!1;try{this.onclose&&this.onclose(e)}catch(t){this._logger.log(c.Error,`HttpConnection.onclose(${e}) threw error '${t}'.`)}}}else this._logger.log(c.Debug,`Call to HttpConnection.stopConnection(${e}) was ignored because the connection is already in the disconnected state.`)}_resolveUrl(e){if(0===e.lastIndexOf("https://",0)||0===e.lastIndexOf("http://",0))return e;if(!T.isBrowser)throw new Error(`Cannot resolve '${e}'.`);const t=window.document.createElement("a");return t.href=e,this._logger.log(c.Information,`Normalizing '${e}' to '${t.href}'.`),t.href}_resolveNegotiateUrl(e){const t=e.indexOf("?");let n=e.substring(0,-1===t?e.length:t);return"/"!==n[n.length-1]&&(n+="/"),n+="negotiate",n+=-1===t?"":e.substring(t),-1===n.indexOf("negotiateVersion")&&(n+=-1===t?"?":"&",n+="negotiateVersion="+this._negotiateVersion),n}}class q{constructor(e){this._transport=e,this._buffer=[],this._executing=!0,this._sendBufferedData=new K,this._transportResult=new K,this._sendLoopPromise=this._sendLoop()}send(e){return this._bufferData(e),this._transportResult||(this._transportResult=new K),this._transportResult.promise}stop(){return this._executing=!1,this._sendBufferedData.resolve(),this._sendLoopPromise}_bufferData(e){if(this._buffer.length&&typeof this._buffer[0]!=typeof e)throw new Error(`Expected data to be of type ${typeof this._buffer} but was of type ${typeof e}`);this._buffer.push(e),this._sendBufferedData.resolve()}_sendLoop(){var e=this;return(0,C.Z)(function*(){for(;;){if(yield e._sendBufferedData.promise,!e._executing){e._transportResult&&e._transportResult.reject("Connection stopped.");break}e._sendBufferedData=new K;const t=e._transportResult;e._transportResult=void 0;const n="string"==typeof e._buffer[0]?e._buffer.join(""):q._concatBuffers(e._buffer);e._buffer.length=0;try{yield e._transport.send(n),t.resolve()}catch(i){t.reject(i)}}})()}static _concatBuffers(e){const t=e.map(s=>s.byteLength).reduce((s,a)=>s+a),n=new Uint8Array(t);let i=0;for(const s of e)n.set(new Uint8Array(s),i),i+=s.byteLength;return n.buffer}}class K{constructor(){this.promise=new Promise((e,t)=>[this._resolver,this._rejecter]=[e,t])}resolve(){this._resolver()}reject(e){this._rejecter(e)}}class k{static write(e){return`${e}${k.RecordSeparator}`}static parse(e){if(e[e.length-1]!==k.RecordSeparator)throw new Error("Message is incomplete.");const t=e.split(k.RecordSeparator);return t.pop(),t}}k.RecordSeparatorCode=30,k.RecordSeparator=String.fromCharCode(k.RecordSeparatorCode);class je{writeHandshakeRequest(e){return k.write(JSON.stringify(e))}parseHandshakeResponse(e){let t,n;if(L(e)){const l=new Uint8Array(e),h=l.indexOf(k.RecordSeparatorCode);if(-1===h)throw new Error("Message is incomplete.");const d=h+1;t=String.fromCharCode.apply(null,Array.prototype.slice.call(l.slice(0,d))),n=l.byteLength>d?l.slice(d).buffer:null}else{const l=e,h=l.indexOf(k.RecordSeparator);if(-1===h)throw new Error("Message is incomplete.");const d=h+1;t=l.substring(0,d),n=l.length>d?l.substring(d):null}const i=k.parse(t),s=JSON.parse(i[0]);if(s.type)throw new Error("Expected a handshake response from the server.");return[n,s]}}var m=function(r){return r[r.Invocation=1]="Invocation",r[r.StreamItem=2]="StreamItem",r[r.Completion=3]="Completion",r[r.StreamInvocation=4]="StreamInvocation",r[r.CancelInvocation=5]="CancelInvocation",r[r.Ping=6]="Ping",r[r.Close=7]="Close",r}(m||{});class Be{constructor(){this.observers=[]}next(e){for(const t of this.observers)t.next(e)}error(e){for(const t of this.observers)t.error&&t.error(e)}complete(){for(const e of this.observers)e.complete&&e.complete()}subscribe(e){return this.observers.push(e),new De(this,e)}}var b=function(r){return r.Disconnected="Disconnected",r.Connecting="Connecting",r.Connected="Connected",r.Disconnecting="Disconnecting",r.Reconnecting="Reconnecting",r}(b||{});class ee{constructor(e,t,n,i){this._nextKeepAlive=0,this._freezeEventListener=()=>{this._logger.log(c.Warning,"The page is being frozen, this will likely lead to the connection being closed and messages being lost. For more information see the docs at https://docs.microsoft.com/aspnet/core/signalr/javascript-client#bsleep")},S.isRequired(e,"connection"),S.isRequired(t,"logger"),S.isRequired(n,"protocol"),this.serverTimeoutInMilliseconds=3e4,this.keepAliveIntervalInMilliseconds=15e3,this._logger=t,this._protocol=n,this.connection=e,this._reconnectPolicy=i,this._handshakeProtocol=new je,this.connection.onreceive=s=>this._processIncomingData(s),this.connection.onclose=s=>this._connectionClosed(s),this._callbacks={},this._methods={},this._closedCallbacks=[],this._reconnectingCallbacks=[],this._reconnectedCallbacks=[],this._invocationId=0,this._receivedHandshakeResponse=!1,this._connectionState=b.Disconnected,this._connectionStarted=!1,this._cachedPingMessage=this._protocol.writeMessage({type:m.Ping})}static create(e,t,n,i){return new ee(e,t,n,i)}get state(){return this._connectionState}get connectionId(){return this.connection&&this.connection.connectionId||null}get baseUrl(){return this.connection.baseUrl||""}set baseUrl(e){if(this._connectionState!==b.Disconnected&&this._connectionState!==b.Reconnecting)throw new Error("The HubConnection must be in the Disconnected or Reconnecting state to change the url.");if(!e)throw new Error("The HubConnection url must be a valid url.");this.connection.baseUrl=e}start(){return this._startPromise=this._startWithStateTransitions(),this._startPromise}_startWithStateTransitions(){var e=this;return(0,C.Z)(function*(){if(e._connectionState!==b.Disconnected)return Promise.reject(new Error("Cannot start a HubConnection that is not in the 'Disconnected' state."));e._connectionState=b.Connecting,e._logger.log(c.Debug,"Starting HubConnection.");try{yield e._startInternal(),T.isBrowser&&window.document.addEventListener("freeze",e._freezeEventListener),e._connectionState=b.Connected,e._connectionStarted=!0,e._logger.log(c.Debug,"HubConnection connected successfully.")}catch(t){return e._connectionState=b.Disconnected,e._logger.log(c.Debug,`HubConnection failed to start successfully because of error '${t}'.`),Promise.reject(t)}})()}_startInternal(){var e=this;return(0,C.Z)(function*(){e._stopDuringStartError=void 0,e._receivedHandshakeResponse=!1;const t=new Promise((n,i)=>{e._handshakeResolver=n,e._handshakeRejecter=i});yield e.connection.start(e._protocol.transferFormat);try{const n={protocol:e._protocol.name,version:e._protocol.version};if(e._logger.log(c.Debug,"Sending handshake request."),yield e._sendMessage(e._handshakeProtocol.writeHandshakeRequest(n)),e._logger.log(c.Information,`Using HubProtocol '${e._protocol.name}'.`),e._cleanupTimeout(),e._resetTimeoutPeriod(),e._resetKeepAliveInterval(),yield t,e._stopDuringStartError)throw e._stopDuringStartError;e.connection.features.inherentKeepAlive||(yield e._sendMessage(e._cachedPingMessage))}catch(n){throw e._logger.log(c.Debug,`Hub handshake failed with error '${n}' during start(). Stopping HubConnection.`),e._cleanupTimeout(),e._cleanupPingTimer(),yield e.connection.stop(n),n}})()}stop(){var e=this;return(0,C.Z)(function*(){const t=e._startPromise;e._stopPromise=e._stopInternal(),yield e._stopPromise;try{yield t}catch{}})()}_stopInternal(e){return this._connectionState===b.Disconnected?(this._logger.log(c.Debug,`Call to HubConnection.stop(${e}) ignored because it is already in the disconnected state.`),Promise.resolve()):this._connectionState===b.Disconnecting?(this._logger.log(c.Debug,`Call to HttpConnection.stop(${e}) ignored because the connection is already in the disconnecting state.`),this._stopPromise):(this._connectionState=b.Disconnecting,this._logger.log(c.Debug,"Stopping HubConnection."),this._reconnectDelayHandle?(this._logger.log(c.Debug,"Connection stopped during reconnect delay. Done reconnecting."),clearTimeout(this._reconnectDelayHandle),this._reconnectDelayHandle=void 0,this._completeClose(),Promise.resolve()):(this._cleanupTimeout(),this._cleanupPingTimer(),this._stopDuringStartError=e||new D("The connection was stopped before the hub handshake could complete."),this.connection.stop(e)))}stream(e,...t){const[n,i]=this._replaceStreamingParams(t),s=this._createStreamInvocation(e,t,i);let a;const l=new Be;return l.cancelCallback=()=>{const h=this._createCancelInvocation(s.invocationId);return delete this._callbacks[s.invocationId],a.then(()=>this._sendWithProtocol(h))},this._callbacks[s.invocationId]=(h,d)=>{d?l.error(d):h&&(h.type===m.Completion?h.error?l.error(new Error(h.error)):l.complete():l.next(h.item))},a=this._sendWithProtocol(s).catch(h=>{l.error(h),delete this._callbacks[s.invocationId]}),this._launchStreams(n,a),l}_sendMessage(e){return this._resetKeepAliveInterval(),this.connection.send(e)}_sendWithProtocol(e){return this._sendMessage(this._protocol.writeMessage(e))}send(e,...t){const[n,i]=this._replaceStreamingParams(t),s=this._sendWithProtocol(this._createInvocation(e,t,!0,i));return this._launchStreams(n,s),s}invoke(e,...t){const[n,i]=this._replaceStreamingParams(t),s=this._createInvocation(e,t,!1,i);return new Promise((l,h)=>{this._callbacks[s.invocationId]=(u,f)=>{f?h(f):u&&(u.type===m.Completion?u.error?h(new Error(u.error)):l(u.result):h(new Error(`Unexpected message type: ${u.type}`)))};const d=this._sendWithProtocol(s).catch(u=>{h(u),delete this._callbacks[s.invocationId]});this._launchStreams(n,d)})}on(e,t){!e||!t||(e=e.toLowerCase(),this._methods[e]||(this._methods[e]=[]),-1===this._methods[e].indexOf(t)&&this._methods[e].push(t))}off(e,t){if(!e)return;e=e.toLowerCase();const n=this._methods[e];if(n)if(t){const i=n.indexOf(t);-1!==i&&(n.splice(i,1),0===n.length&&delete this._methods[e])}else delete this._methods[e]}onclose(e){e&&this._closedCallbacks.push(e)}onreconnecting(e){e&&this._reconnectingCallbacks.push(e)}onreconnected(e){e&&this._reconnectedCallbacks.push(e)}_processIncomingData(e){if(this._cleanupTimeout(),this._receivedHandshakeResponse||(e=this._processHandshakeResponse(e),this._receivedHandshakeResponse=!0),e){const t=this._protocol.parseMessages(e,this._logger);for(const n of t)switch(n.type){case m.Invocation:this._invokeClientMethod(n);break;case m.StreamItem:case m.Completion:{const i=this._callbacks[n.invocationId];if(i){n.type===m.Completion&&delete this._callbacks[n.invocationId];try{i(n)}catch(s){this._logger.log(c.Error,`Stream callback threw error: ${le(s)}`)}}break}case m.Ping:break;case m.Close:{this._logger.log(c.Information,"Close message received from server.");const i=n.error?new Error("Server returned an error on close: "+n.error):void 0;!0===n.allowReconnect?this.connection.stop(i):this._stopPromise=this._stopInternal(i);break}default:this._logger.log(c.Warning,`Invalid message type: ${n.type}.`)}}this._resetTimeoutPeriod()}_processHandshakeResponse(e){let t,n;try{[n,t]=this._handshakeProtocol.parseHandshakeResponse(e)}catch(i){const s="Error parsing handshake response: "+i;this._logger.log(c.Error,s);const a=new Error(s);throw this._handshakeRejecter(a),a}if(t.error){const i="Server returned handshake error: "+t.error;this._logger.log(c.Error,i);const s=new Error(i);throw this._handshakeRejecter(s),s}return this._logger.log(c.Debug,"Server handshake complete."),this._handshakeResolver(),n}_resetKeepAliveInterval(){this.connection.features.inherentKeepAlive||(this._nextKeepAlive=(new Date).getTime()+this.keepAliveIntervalInMilliseconds,this._cleanupPingTimer())}_resetTimeoutPeriod(){var e=this;if(!(this.connection.features&&this.connection.features.inherentKeepAlive||(this._timeoutHandle=setTimeout(()=>this.serverTimeout(),this.serverTimeoutInMilliseconds),void 0!==this._pingServerHandle))){let t=this._nextKeepAlive-(new Date).getTime();t<0&&(t=0),this._pingServerHandle=setTimeout((0,C.Z)(function*(){if(e._connectionState===b.Connected)try{yield e._sendMessage(e._cachedPingMessage)}catch{e._cleanupPingTimer()}}),t)}}serverTimeout(){this.connection.stop(new Error("Server timeout elapsed without receiving a message from the server."))}_invokeClientMethod(e){var t=this;return(0,C.Z)(function*(){const n=e.target.toLowerCase(),i=t._methods[n];if(!i)return t._logger.log(c.Warning,`No client method with the name '${n}' found.`),void(e.invocationId&&(t._logger.log(c.Warning,`No result given for '${n}' method and invocation ID '${e.invocationId}'.`),yield t._sendWithProtocol(t._createCompletionMessage(e.invocationId,"Client didn't provide a result.",null))));const s=i.slice(),a=!!e.invocationId;let l,h,d;for(const u of s)try{const f=l;l=yield u.apply(t,e.arguments),a&&l&&f&&(t._logger.log(c.Error,`Multiple results provided for '${n}'. Sending error to server.`),d=t._createCompletionMessage(e.invocationId,"Client provided multiple results.",null)),h=void 0}catch(f){h=f,t._logger.log(c.Error,`A callback for the method '${n}' threw error '${f}'.`)}d?yield t._sendWithProtocol(d):a?(h?d=t._createCompletionMessage(e.invocationId,`${h}`,null):void 0!==l?d=t._createCompletionMessage(e.invocationId,null,l):(t._logger.log(c.Warning,`No result given for '${n}' method and invocation ID '${e.invocationId}'.`),d=t._createCompletionMessage(e.invocationId,"Client didn't provide a result.",null)),yield t._sendWithProtocol(d)):l&&t._logger.log(c.Error,`Result given for '${n}' method but server is not expecting a result.`)})()}_connectionClosed(e){this._logger.log(c.Debug,`HubConnection.connectionClosed(${e}) called while in state ${this._connectionState}.`),this._stopDuringStartError=this._stopDuringStartError||e||new D("The underlying connection was closed before the hub handshake could complete."),this._handshakeResolver&&this._handshakeResolver(),this._cancelCallbacksWithError(e||new Error("Invocation canceled due to the underlying connection being closed.")),this._cleanupTimeout(),this._cleanupPingTimer(),this._connectionState===b.Disconnecting?this._completeClose(e):this._connectionState===b.Connected&&this._reconnectPolicy?this._reconnect(e):this._connectionState===b.Connected&&this._completeClose(e)}_completeClose(e){if(this._connectionStarted){this._connectionState=b.Disconnected,this._connectionStarted=!1,T.isBrowser&&window.document.removeEventListener("freeze",this._freezeEventListener);try{this._closedCallbacks.forEach(t=>t.apply(this,[e]))}catch(t){this._logger.log(c.Error,`An onclose callback called with error '${e}' threw error '${t}'.`)}}}_reconnect(e){var t=this;return(0,C.Z)(function*(){const n=Date.now();let i=0,s=void 0!==e?e:new Error("Attempting to reconnect due to a unknown error."),a=t._getNextRetryDelay(i++,0,s);if(null===a)return t._logger.log(c.Debug,"Connection not reconnecting because the IRetryPolicy returned null on the first reconnect attempt."),void t._completeClose(e);if(t._connectionState=b.Reconnecting,t._logger.log(c.Information,e?`Connection reconnecting because of error '${e}'.`:"Connection reconnecting."),0!==t._reconnectingCallbacks.length){try{t._reconnectingCallbacks.forEach(l=>l.apply(t,[e]))}catch(l){t._logger.log(c.Error,`An onreconnecting callback called with error '${e}' threw error '${l}'.`)}if(t._connectionState!==b.Reconnecting)return void t._logger.log(c.Debug,"Connection left the reconnecting state in onreconnecting callback. Done reconnecting.")}for(;null!==a;){if(t._logger.log(c.Information,`Reconnect attempt number ${i} will start in ${a} ms.`),yield new Promise(l=>{t._reconnectDelayHandle=setTimeout(l,a)}),t._reconnectDelayHandle=void 0,t._connectionState!==b.Reconnecting)return void t._logger.log(c.Debug,"Connection left the reconnecting state during reconnect delay. Done reconnecting.");try{if(yield t._startInternal(),t._connectionState=b.Connected,t._logger.log(c.Information,"HubConnection reconnected successfully."),0!==t._reconnectedCallbacks.length)try{t._reconnectedCallbacks.forEach(l=>l.apply(t,[t.connection.connectionId]))}catch(l){t._logger.log(c.Error,`An onreconnected callback called with connectionId '${t.connection.connectionId}; threw error '${l}'.`)}return}catch(l){if(t._logger.log(c.Information,`Reconnect attempt failed because of error '${l}'.`),t._connectionState!==b.Reconnecting)return t._logger.log(c.Debug,`Connection moved to the '${t._connectionState}' from the reconnecting state during reconnect attempt. Done reconnecting.`),void(t._connectionState===b.Disconnecting&&t._completeClose());s=l instanceof Error?l:new Error(l.toString()),a=t._getNextRetryDelay(i++,Date.now()-n,s)}}t._logger.log(c.Information,`Reconnect retries have been exhausted after ${Date.now()-n} ms and ${i} failed attempts. Connection disconnecting.`),t._completeClose()})()}_getNextRetryDelay(e,t,n){try{return this._reconnectPolicy.nextRetryDelayInMilliseconds({elapsedMilliseconds:t,previousRetryCount:e,retryReason:n})}catch(i){return this._logger.log(c.Error,`IRetryPolicy.nextRetryDelayInMilliseconds(${e}, ${t}) threw error '${i}'.`),null}}_cancelCallbacksWithError(e){const t=this._callbacks;this._callbacks={},Object.keys(t).forEach(n=>{const i=t[n];try{i(null,e)}catch(s){this._logger.log(c.Error,`Stream 'error' callback called with '${e}' threw error: ${le(s)}`)}})}_cleanupPingTimer(){this._pingServerHandle&&(clearTimeout(this._pingServerHandle),this._pingServerHandle=void 0)}_cleanupTimeout(){this._timeoutHandle&&clearTimeout(this._timeoutHandle)}_createInvocation(e,t,n,i){if(n)return 0!==i.length?{arguments:t,streamIds:i,target:e,type:m.Invocation}:{arguments:t,target:e,type:m.Invocation};{const s=this._invocationId;return this._invocationId++,0!==i.length?{arguments:t,invocationId:s.toString(),streamIds:i,target:e,type:m.Invocation}:{arguments:t,invocationId:s.toString(),target:e,type:m.Invocation}}}_launchStreams(e,t){if(0!==e.length){t||(t=Promise.resolve());for(const n in e)e[n].subscribe({complete:()=>{t=t.then(()=>this._sendWithProtocol(this._createCompletionMessage(n)))},error:i=>{let s;s=i instanceof Error?i.message:i&&i.toString?i.toString():"Unknown error",t=t.then(()=>this._sendWithProtocol(this._createCompletionMessage(n,s)))},next:i=>{t=t.then(()=>this._sendWithProtocol(this._createStreamItemMessage(n,i)))}})}}_replaceStreamingParams(e){const t=[],n=[];for(let i=0;i<e.length;i++){const s=e[i];if(this._isObservable(s)){const a=this._invocationId;this._invocationId++,t[a]=s,n.push(a.toString()),e.splice(i,1)}}return[t,n]}_isObservable(e){return e&&e.subscribe&&"function"==typeof e.subscribe}_createStreamInvocation(e,t,n){const i=this._invocationId;return this._invocationId++,0!==n.length?{arguments:t,invocationId:i.toString(),streamIds:n,target:e,type:m.StreamInvocation}:{arguments:t,invocationId:i.toString(),target:e,type:m.StreamInvocation}}_createCancelInvocation(e){return{invocationId:e,type:m.CancelInvocation}}_createStreamItemMessage(e,t){return{invocationId:e,item:t,type:m.StreamItem}}_createCompletionMessage(e,t,n){return t?{error:t,invocationId:e,type:m.Completion}:{invocationId:e,result:n,type:m.Completion}}}class Qe{constructor(){this.name="json",this.version=1,this.transferFormat=E.Text}parseMessages(e,t){if("string"!=typeof e)throw new Error("Invalid input for JSON hub protocol. Expected a string.");if(!e)return[];null===t&&(t=W.instance);const n=k.parse(e),i=[];for(const s of n){const a=JSON.parse(s);if("number"!=typeof a.type)throw new Error("Invalid payload.");switch(a.type){case m.Invocation:this._isInvocationMessage(a);break;case m.StreamItem:this._isStreamItemMessage(a);break;case m.Completion:this._isCompletionMessage(a);break;case m.Ping:case m.Close:break;default:t.log(c.Information,"Unknown message type '"+a.type+"' ignored.");continue}i.push(a)}return i}writeMessage(e){return k.write(JSON.stringify(e))}_isInvocationMessage(e){this._assertNotEmptyString(e.target,"Invalid payload for Invocation message."),void 0!==e.invocationId&&this._assertNotEmptyString(e.invocationId,"Invalid payload for Invocation message.")}_isStreamItemMessage(e){if(this._assertNotEmptyString(e.invocationId,"Invalid payload for StreamItem message."),void 0===e.item)throw new Error("Invalid payload for StreamItem message.")}_isCompletionMessage(e){if(e.result&&e.error)throw new Error("Invalid payload for Completion message.");!e.result&&e.error&&this._assertNotEmptyString(e.error,"Invalid payload for Completion message."),this._assertNotEmptyString(e.invocationId,"Invalid payload for Completion message.")}_assertNotEmptyString(e,t){if("string"!=typeof e||""===e)throw new Error(t)}}const Ye={trace:c.Trace,debug:c.Debug,info:c.Information,information:c.Information,warn:c.Warning,warning:c.Warning,error:c.Error,critical:c.Critical,none:c.None};class Ve{configureLogging(e){if(S.isRequired(e,"logging"),function Xe(r){return void 0!==r.log}(e))this.logger=e;else if("string"==typeof e){const t=function Ge(r){const e=Ye[r.toLowerCase()];if(typeof e<"u")return e;throw new Error(`Unknown log level: ${r}`)}(e);this.logger=new z(t)}else this.logger=new z(e);return this}withUrl(e,t){return S.isRequired(e,"url"),S.isNotEmpty(e,"url"),this.url=e,this.httpConnectionOptions="object"==typeof t?{...this.httpConnectionOptions,...t}:{...this.httpConnectionOptions,transport:t},this}withHubProtocol(e){return S.isRequired(e,"protocol"),this.protocol=e,this}withAutomaticReconnect(e){if(this.reconnectPolicy)throw new Error("A reconnectPolicy has already been set.");return this.reconnectPolicy=e?Array.isArray(e)?new re(e):e:new re,this}build(){const e=this.httpConnectionOptions||{};if(void 0===e.logger&&(e.logger=this.logger),!this.url)throw new Error("The 'HubConnectionBuilder.withUrl' method must be called before building the connection.");const t=new Le(this.url,e);return ee.create(t,this.logger||W.instance,this.protocol||new Qe,this.reconnectPolicy)}}let qe=(()=>{var r;class e{constructor(n){this.toastr=n,this.baseUrl=A.N.baseUrl,this.appointmentStatusChanged=new o.vpe,this.startConnection=()=>{this.hubConnection=(new Ve).withUrl(this.baseUrl+"hubs/appointment",{transport:I.ServerSentEvents}).build(),this.hubConnection.start().then(()=>console.log("Connection started")).catch(i=>console.log("Error while starting connection: "+i))},this.addAppointmentListner=()=>{this.hubConnection.on("SendAppointmentStatusChange",i=>{console.log("SignalR event received",i),this.appointmentStatusChanged.emit(i),this.showAppointmentStatusChanged(i.appointmentId,i.status)})}}showAppointmentStatusChanged(n,i){this.toastr.success(`Appointment with id ${n} changed status to ${i}`)}}return(r=e).\u0275fac=function(n){return new(n||r)(o.LFG(v._W))},r.\u0275prov=o.Yz7({token:r,factory:r.\u0275fac,providedIn:"root"}),e})();function et(r,e){if(1&r&&(o.ynx(0),o.TgZ(1,"c-alert",9)(2,"h5"),o._uU(3,"Upcoming Appointment"),o.qZA(),o.TgZ(4,"div",10)(5,"p"),o._uU(6),o.qZA(),o.TgZ(7,"p"),o._uU(8),o.ALo(9,"date"),o.qZA(),o.TgZ(10,"p"),o._uU(11),o.ALo(12,"uppercase"),o.qZA()()(),o.BQk()),2&r){const t=o.oxw(3).$implicit,n=o.oxw();o.xp6(1),o.Q6J("color",n.getColor(t.upcomingAppointments[1].status)),o.xp6(5),o.hij("Code: ",t.upcomingAppointments[1].id,""),o.xp6(2),o.Oqu(o.xi3(9,4,t.upcomingAppointments[1].dateOfVisit,"short")),o.xp6(3),o.Oqu(o.lcZ(12,7,t.upcomingAppointments[1].status))}}function tt(r,e){if(1&r&&(o.ynx(0),o.TgZ(1,"c-alert",9)(2,"h5"),o._uU(3,"Current Appointment"),o.qZA(),o.TgZ(4,"div",10)(5,"p"),o._uU(6),o.qZA(),o.TgZ(7,"p"),o._uU(8),o.ALo(9,"date"),o.qZA(),o.TgZ(10,"p"),o._uU(11),o.ALo(12,"uppercase"),o.qZA()()(),o.YNc(13,et,13,9,"ng-container",11),o.BQk()),2&r){const t=o.oxw(2).$implicit,n=o.oxw();o.xp6(1),o.Q6J("color",n.getColor(t.upcomingAppointments[0].status)),o.xp6(5),o.hij("Code: ",t.upcomingAppointments[0].id,""),o.xp6(2),o.Oqu(o.xi3(9,5,t.upcomingAppointments[0].dateOfVisit,"short")),o.xp6(3),o.Oqu(o.lcZ(12,8,t.upcomingAppointments[0].status)),o.xp6(2),o.Q6J("ngIf",t.upcomingAppointments.length>1)}}function nt(r,e){1&r&&(o.TgZ(0,"p"),o._uU(1,"No current appointments."),o.qZA())}function ot(r,e){if(1&r&&(o.TgZ(0,"c-card-body",6),o.YNc(1,tt,14,10,"ng-container",7),o.YNc(2,nt,2,0,"ng-template",null,8,o.W1O),o.qZA()),2&r){const t=o.MAs(3),n=o.oxw().$implicit;o.xp6(1),o.Q6J("ngIf",n.upcomingAppointments.length>0)("ngIfElse",t)}}function it(r,e){if(1&r&&(o.TgZ(0,"c-col",2)(1,"c-card",3)(2,"h4",4),o._uU(3),o.qZA(),o.YNc(4,ot,4,2,"c-card-body",5),o.qZA()()),2&r){const t=e.$implicit;o.Q6J("sm",4),o.xp6(3),o.hij("Clinic #: ",t.clinicNumber,""),o.xp6(1),o.Q6J("ngIf",t.upcomingAppointments)}}function rt(r,e){if(1&r){const t=o.EpF();o.TgZ(0,"div",12)(1,"app-pagination",13),o.NdJ("ngModelChange",function(i){o.CHM(t);const s=o.oxw();return o.KtG(s.pagination.currentPage=i)})("pageChanged",function(i){o.CHM(t);const s=o.oxw();return o.KtG(s.pageChanged(i))}),o.qZA()()}if(2&r){const t=o.oxw();o.xp6(1),o.Q6J("boundaryLinks",!0)("totalItems",t.pagination.totalItems)("itemsPerPage",t.pagination.itemsPerPage)("ngModel",t.pagination.currentPage)}}let st=(()=>{var r;class e{constructor(n,i){this.clinicService=n,this.signalr=i,this.clinics=[],this.activePane=0,this.clinicParams={pageNumber:1,pageSize:6},this.pagination=null,this.subscriptions=[],this.appointmentList=[]}ngOnInit(){this.getClinics(),this.signalr.startConnection(),this.signalr.addAppointmentListner();const n=this.signalr.appointmentStatusChanged.subscribe(s=>{const a=this.getDoctorIdByAppointmentId(s.appointmentId);this.clinicService.updateDoctorBookedWithAppointmentsByDoctorId(a,s.appointmentId,s.status)});this.subscriptions.push(n);const i=this.clinicService.appointmentStatusUpdated$.subscribe(s=>{s&&this.handleAppointmentStatusUpdate()});this.subscriptions.push(i)}handleAppointmentStatusUpdate(){this.getClinics()}getClinics(){this.clinicService.getClinicsWithFirstTwoUpcomingAppointments(this.clinicParams).subscribe(n=>{this.clinics=n.result,this.pagination=n.pagination,this.getClinicsUpcomingAppointments()})}getClinicsUpcomingAppointments(){this.clinics.forEach(n=>{n.upcomingAppointments=this.getUpcomingAppointments(n)})}getDoctorIdByAppointmentId(n){for(const i of this.clinics)if(i.upcomingAppointments){const s=i.upcomingAppointments.find(a=>a.id===n);if(s)return s.doctorId}return 0}getUpcomingAppointments(n){return n.clinicDoctors?n.clinicDoctors.flatMap(l=>l.doctor?.bookedWithAppointments??[]).sort((l,h)=>new Date(l.dateOfVisit).getTime()-new Date(h.dateOfVisit).getTime()).slice(0,2):[]}onTabChange(n){this.activePane=n}getColor(n){return"Finalized"==n?"dark":"primary"}pageChanged(n){this.clinicParams.pageNumber=n,this.getClinics()}ngOnDestroy(){this.subscriptions.forEach(n=>n.unsubscribe())}}return(r=e).\u0275fac=function(n){return new(n||r)(o.Y36(R),o.Y36(qe))},r.\u0275cmp=o.Xpm({type:r,selectors:[["app-clinics-timetable"]],decls:3,vars:2,consts:[[3,"sm",4,"ngFor","ngForOf"],["class","d-flex justify-content-center",4,"ngIf"],[3,"sm"],[1,"mb-4","scroll"],[1,"card-header","text-center"],["class","text-center",4,"ngIf"],[1,"text-center"],[4,"ngIf","ngIfElse"],["noAppointments",""],[3,"color"],[1,"d-flex","flex-row","justify-content-between"],[4,"ngIf"],[1,"d-flex","justify-content-center"],[3,"boundaryLinks","totalItems","itemsPerPage","ngModel","ngModelChange","pageChanged"]],template:function(n,i){1&n&&(o.TgZ(0,"c-row"),o.YNc(1,it,5,3,"c-col",0),o.qZA(),o.YNc(2,rt,2,4,"div",1)),2&n&&(o.xp6(1),o.Q6J("ngForOf",i.clinics),o.xp6(1),o.Q6J("ngIf",i.pagination))},dependencies:[x.sg,x.O5,w.JJ,w.On,_.Yp0,_.iok,_.AkF,_.yue,ie.Q,_.wxo,x.gd,x.uU]}),e})();function ct(r,e){1&r&&o._UZ(0,"app-clinics-timetable")}function at(r,e){if(1&r){const t=o.EpF();o.TgZ(0,"tr",18),o.NdJ("click",function(){const s=o.CHM(t).$implicit,a=o.oxw(3);return o.KtG(a.setClinicAndShowModal(s))}),o.TgZ(1,"td"),o._uU(2),o.qZA(),o.TgZ(3,"td",19)(4,"button",20),o.NdJ("click",function(i){const a=o.CHM(t).$implicit,l=o.oxw(3);return o.KtG(l.deleteClinic(a.id,i))}),o.O4$(),o._UZ(5,"svg",21),o.qZA()()()}if(2&r){const t=e.$implicit;o.xp6(2),o.Oqu(t.clinicNumber)}}function lt(r,e){if(1&r&&(o.O4$(),o.kcU(),o.TgZ(0,"table",15)(1,"thead")(2,"tr")(3,"th",16),o._uU(4,"Clinic Number"),o.qZA(),o.TgZ(5,"th",16),o._uU(6,"Remove"),o.qZA()()(),o.TgZ(7,"tbody"),o.YNc(8,at,6,1,"tr",17),o.qZA()()),2&r){const t=o.oxw(2);o.xp6(8),o.Q6J("ngForOf",t.clinics)}}function ht(r,e){if(1&r){const t=o.EpF();o.O4$(),o.kcU(),o.TgZ(0,"div",22)(1,"app-pagination",23),o.NdJ("ngModelChange",function(i){o.CHM(t);const s=o.oxw(2);return o.KtG(s.pagination.currentPage=i)})("pageChanged",function(i){o.CHM(t);const s=o.oxw(2);return o.KtG(s.pageChanged(i))}),o.qZA()()}if(2&r){const t=o.oxw(2);o.xp6(1),o.Q6J("boundaryLinks",!0)("totalItems",t.pagination.totalItems)("itemsPerPage",t.pagination.itemsPerPage)("ngModel",t.pagination.currentPage)}}function dt(r,e){if(1&r){const t=o.EpF();o.ynx(0),o.TgZ(1,"c-navbar",7)(2,"div",8)(3,"button",9),o.NdJ("click",function(){o.CHM(t);const i=o.oxw();return o.KtG(i.clearFormAndShowModal())}),o.TgZ(4,"span",10),o.O4$(),o._UZ(5,"svg",11),o._uU(6," Add new clinic"),o.qZA()()()(),o.YNc(7,lt,9,1,"table",12),o.YNc(8,ht,2,4,"div",13),o.kcU(),o.TgZ(9,"app-clinics-modal",14),o.NdJ("clinicAddedUpdated",function(i){o.CHM(t);const s=o.oxw();return o.KtG(s.clinicAddedUpdated(i))})("visibleChange",function(i){o.CHM(t);const s=o.oxw();return o.KtG(s.modalVisibility=i)}),o.qZA(),o.BQk()}if(2&r){const t=o.oxw();o.xp6(7),o.Q6J("ngIf",t.clinics&&t.clinics.length>0),o.xp6(1),o.Q6J("ngIf",t.pagination),o.xp6(1),o.Q6J("specialityList",t.specialityList)("visible",t.modalVisibility)}}const pt=[{path:"",component:(()=>{var r;class e{constructor(n,i){this.clinicService=n,this.toastr=i,this.clinics=[],this.clinicParams={pageNumber:1,pageSize:15},this.modalVisibility=!1,this.specialityList=[],this.pagination=null,this.activePane=0}ngOnInit(){this.getClinics()}getClinics(){this.clinicService.getClinics(this.clinicParams).subscribe(n=>{this.clinics=n.result,this.pagination=n.pagination})}toggleModal(){this.modalVisibility=!this.modalVisibility}onTabChange(n){this.activePane=n}pageChanged(n){this.clinicParams.pageNumber=n,this.getClinics()}clinicAddedUpdated(n){this.getClinics()}clearFormAndShowModal(){this.clinicsModal.intializeForm(),this.clinicsModal.selectedDoctor={},this.clinicsModal.doctorList=[],this.toggleModal()}setClinicAndShowModal(n){this.mapClinicTocreateUpdateClinicForm(n),this.toggleModal()}mapClinicTocreateUpdateClinicForm(n){this.clinicsModal.createUpdateClinicForm.get("id")?.setValue(n.id),this.clinicsModal.createUpdateClinicForm.get("clinicNumber")?.setValue(n.clinicNumber),null!=n.clinicDoctors&&(this.initializeClinicDoctors(n.clinicDoctors),this.clinicsModal.doctorList=this.initDoctorListFromDoctorClinic(n.clinicDoctors),this.clinicsModal.selectedDoctor=this.initDoctorListFromDoctorClinic(n.clinicDoctors))}initializeClinicDoctors(n){const i=n.map(s=>({id:s.doctorId,clinicId:s.clinicId}));this.clinicsModal.updateClinicDoctor(i)}initDoctorListFromDoctorClinic(n){return n.map(i=>({id:i.doctorId,fullName:i.doctor.fullName}))}deleteClinic(n,i){i.stopPropagation(),this.clinicService.deleteClinic(n).subscribe({next:s=>{this.clinics=this.clinics?.filter(a=>a.id!==n),this.toastr.success("Clinic deleted successfully")},error:s=>{console.error(s)}})}}return(r=e).\u0275fac=function(n){return new(n||r)(o.Y36(R),o.Y36(v._W))},r.\u0275cmp=o.Xpm({type:r,selectors:[["app-dashboard-clinics"]],viewQuery:function(n,i){if(1&n&&o.Gf(oe,5),2&n){let s;o.iGM(s=o.CRH())&&(i.clinicsModal=s.first)}},decls:13,vars:8,consts:[["variant","tabs"],["cNavLink","",3,"active","cTabContent","tabPaneIdx"],["cNavLink","",3,"cTabContent","tabPaneIdx"],[3,"activeTabPaneIdx","activeTabPaneIdxChange"],["tabContent","cTabContent"],[1,"p-3"],[4,"ngIf"],["colorScheme","dark","expand","lg",1,"bg-dark"],["navbar","",1,"d-flex","flex-column","gap-2","flex-lg-row","justify-content-between","w-100","px-5"],["cButton","","color","light",3,"click"],[1,""],["cIcon","","name","cilPlus",1,"border","rounded","border-dark"],["cTable","",4,"ngIf"],["class","d-flex justify-content-center",4,"ngIf"],[3,"specialityList","visible","clinicAddedUpdated","visibleChange"],["cTable",""],["scope","col"],["class","user-table",3,"click",4,"ngFor","ngForOf"],[1,"user-table",3,"click"],[1,"pt-1"],["cButton","","color","danger",1,"btn-m",3,"click"],["cIcon","","name","cil-trash"],[1,"d-flex","justify-content-center"],[3,"boundaryLinks","totalItems","itemsPerPage","ngModel","ngModelChange","pageChanged"]],template:function(n,i){if(1&n&&(o.TgZ(0,"c-nav",0)(1,"c-nav-item")(2,"a",1),o._uU(3," Time Table "),o.qZA()(),o.TgZ(4,"c-nav-item")(5,"a",2),o._uU(6," Clinics "),o.qZA()()(),o.TgZ(7,"c-tab-content",3,4),o.NdJ("activeTabPaneIdxChange",function(a){return i.onTabChange(a)}),o.TgZ(9,"c-tab-pane",5),o.YNc(10,ct,1,0,"app-clinics-timetable",6),o.qZA(),o.TgZ(11,"c-tab-pane",5),o.YNc(12,dt,10,4,"ng-container",6),o.qZA()()),2&n){const s=o.MAs(8);o.xp6(2),o.Q6J("active",!0)("cTabContent",s)("tabPaneIdx",0),o.xp6(3),o.Q6J("cTabContent",s)("tabPaneIdx",1),o.xp6(2),o.Q6J("activeTabPaneIdx",i.activePane),o.xp6(3),o.Q6J("ngIf",0===i.activePane),o.xp6(2),o.Q6J("ngIf",1===i.activePane)}},dependencies:[_.auY,_.SB8,x.sg,x.O5,w.JJ,w.On,Ce.ar,_.rZi,_.HOP,_.Vh3,_.Hq3,_.C$2,_.Eug,_.hL0,ie.Q,oe,st]}),e})(),data:{title:"Clinics"}}];let ut=(()=>{var r;class e{}return(r=e).\u0275fac=function(n){return new(n||r)},r.\u0275mod=o.oAB({type:r}),r.\u0275inj=o.cJS({imports:[F.Bz.forChild(pt),F.Bz]}),e})(),gt=(()=>{var r;class e{}return(r=e).\u0275fac=function(n){return new(n||r)},r.\u0275mod=o.oAB({type:r}),r.\u0275inj=o.cJS({imports:[ut,_.U$I,_.W4s,_.e$z,x.ez,_.u3b,w.u5,$.c,_.m81,_.zkK,ne.A0,_.nMh]}),e})()},7490:(te,M,g)=>{g.d(M,{M:()=>x});var _=g(2557);class x extends _.Z{constructor($){super(),this.orderBy="date",this.order="asc",this.gender="",this.searchTerm="",this.roleName="",this.doctorSpecialityId=null,Object.assign(this,$)}}}}]);